# packages/dual_freezer_monitoring.yaml
# Comprehensive Dual Freezer Monitoring System
# Created: 2025-10-01
# Updated: 2025-10-01 - Fixed missing cost sensors
# Purpose: Monitor both freezers with alerts, cost tracking, and anomaly detection

#==============================================================================
# INPUT NUMBERS - Configuration for thresholds and settings
#==============================================================================
input_number:
  # Freezer Centre Thresholds
  freezer_centre_normal_threshold:
    name: Freezer Centre Normal Threshold
    min: 0
    max: 500
    step: 10
    initial: 150
    unit_of_measurement: "W"
    icon: mdi:gauge
  
  freezer_centre_high_threshold:
    name: Freezer Centre High Threshold
    min: 0
    max: 1000
    step: 10
    initial: 250
    unit_of_measurement: "W"
    icon: mdi:alert
  
  freezer_centre_critical_threshold:
    name: Freezer Centre Critical Threshold
    min: 0
    max: 2000
    step: 50
    initial: 400
    unit_of_measurement: "W"
    icon: mdi:alert-circle
  
  # Freezer Left Thresholds
  freezer_left_normal_threshold:
    name: Freezer Left Normal Threshold
    min: 0
    max: 500
    step: 10
    initial: 150
    unit_of_measurement: "W"
    icon: mdi:gauge
  
  freezer_left_high_threshold:
    name: Freezer Left High Threshold
    min: 0
    max: 1000
    step: 10
    initial: 250
    unit_of_measurement: "W"
    icon: mdi:alert
  
  freezer_left_critical_threshold:
    name: Freezer Left Critical Threshold
    min: 0
    max: 2000
    step: 50
    initial: 400
    unit_of_measurement: "W"
    icon: mdi:alert-circle
  
  # Shared Settings
  electricity_rate_freezers:
    name: Electricity Rate (Freezers)
    min: 0
    max: 10
    step: 0.01
    initial: 2.97
    unit_of_measurement: "ZAR/kWh"
    icon: mdi:currency-usd

#==============================================================================
# INPUT BOOLEANS - Enable/disable monitoring features
#==============================================================================
input_boolean:
  freezer_monitoring_enabled:
    name: Freezer Monitoring Enabled
    initial: true
    icon: mdi:monitor
  
  freezer_telegram_alerts:
    name: Freezer Telegram Alerts
    initial: true
    icon: mdi:send
  
  freezer_email_alerts:
    name: Freezer Email Alerts
    initial: true
    icon: mdi:email-alert
  
  freezer_anomaly_detection:
    name: Freezer Anomaly Detection
    initial: true
    icon: mdi:chart-bell-curve

#==============================================================================
# TEMPLATE SENSORS - Advanced monitoring and calculations
#==============================================================================
template:
  - sensor:
      # FREEZER CENTRE STATUS
      - name: "Freezer Centre Status"
        unique_id: freezer_centre_status
        state: >
          {% set power = states('sensor.freezer_garage_centre_power') | float(0) %}
          {% set normal = states('input_number.freezer_centre_normal_threshold') | float(150) %}
          {% set high = states('input_number.freezer_centre_high_threshold') | float(250) %}
          {% set critical = states('input_number.freezer_centre_critical_threshold') | float(400) %}
          {% if power < 5 %}
            Off
          {% elif power < normal %}
            Normal
          {% elif power < high %}
            Above Normal
          {% elif power < critical %}
            High
          {% else %}
            Critical
          {% endif %}
        icon: >
          {% set status = states('sensor.freezer_centre_status') %}
          {% if status == 'Off' %}
            mdi:power-off
          {% elif status == 'Normal' %}
            mdi:check-circle
          {% elif status in ['Above Normal', 'High'] %}
            mdi:alert
          {% else %}
            mdi:alert-circle
          {% endif %}
      
      # FREEZER LEFT STATUS
      - name: "Freezer Left Status"
        unique_id: freezer_left_status
        state: >
          {% set power = states('sensor.freezer_garage_left_power') | float(0) %}
          {% set normal = states('input_number.freezer_left_normal_threshold') | float(150) %}
          {% set high = states('input_number.freezer_left_high_threshold') | float(250) %}
          {% set critical = states('input_number.freezer_left_critical_threshold') | float(400) %}
          {% if power < 5 %}
            Off
          {% elif power < normal %}
            Normal
          {% elif power < high %}
            Above Normal
          {% elif power < critical %}
            High
          {% else %}
            Critical
          {% endif %}
        icon: >
          {% set status = states('sensor.freezer_left_status') %}
          {% if status == 'Off' %}
            mdi:power-off
          {% elif status == 'Normal' %}
            mdi:check-circle
          {% elif status in ['Above Normal', 'High'] %}
            mdi:alert
          {% else %}
            mdi:alert-circle
          {% endif %}
      
      # FREEZER CENTRE COST CALCULATIONS
      - name: "Freezer Centre Daily Cost"
        unique_id: freezer_centre_daily_cost
        unit_of_measurement: "ZAR"
        device_class: monetary
        state: >
          {{ (states('sensor.daily_freezer_garage_centre_power') | float(0) * 
              states('input_number.electricity_rate_freezers') | float(2.97)) | round(2) }}
        icon: mdi:currency-zar
      
      - name: "Freezer Centre Monthly Cost"
        unique_id: freezer_centre_monthly_cost
        unit_of_measurement: "ZAR"
        device_class: monetary
        state: >
          {{ (states('sensor.monthly_freezer_garage_centre_power') | float(0) * 
              states('input_number.electricity_rate_freezers') | float(2.97)) | round(2) }}
        icon: mdi:currency-zar
      
      - name: "Freezer Centre Yearly Cost"
        unique_id: freezer_centre_yearly_cost
        unit_of_measurement: "ZAR"
        device_class: monetary
        state: >
          {{ (states('sensor.yearly_freezer_garage_centre_power') | float(0) * 
              states('input_number.electricity_rate_freezers') | float(2.97)) | round(2) }}
        icon: mdi:currency-zar
      
      # FREEZER LEFT COST CALCULATIONS
      - name: "Freezer Left Daily Cost"
        unique_id: freezer_left_daily_cost
        unit_of_measurement: "ZAR"
        device_class: monetary
        state: >
          {{ (states('sensor.daily_freezer_garage_left_power') | float(0) * 
              states('input_number.electricity_rate_freezers') | float(2.97)) | round(2) }}
        icon: mdi:currency-zar
      
      - name: "Freezer Left Monthly Cost"
        unique_id: freezer_left_monthly_cost
        unit_of_measurement: "ZAR"
        device_class: monetary
        state: >
          {{ (states('sensor.monthly_freezer_garage_left_power') | float(0) * 
              states('input_number.electricity_rate_freezers') | float(2.97)) | round(2) }}
        icon: mdi:currency-zar
      
      - name: "Freezer Left Yearly Cost"
        unique_id: freezer_left_yearly_cost
        unit_of_measurement: "ZAR"
        device_class: monetary
        state: >
          {{ (states('sensor.yearly_freezer_garage_left_power') | float(0) * 
              states('input_number.electricity_rate_freezers') | float(2.97)) | round(2) }}
        icon: mdi:currency-zar
      
      # COMBINED FREEZER COSTS
      - name: "Both Freezers Daily Cost"
        unique_id: both_freezers_daily_cost
        unit_of_measurement: "ZAR"
        device_class: monetary
        state: >
          {{ (states('sensor.freezer_centre_daily_cost') | float(0) + 
              states('sensor.freezer_left_daily_cost') | float(0)) | round(2) }}
        icon: mdi:currency-zar
      
      - name: "Both Freezers Monthly Cost"
        unique_id: both_freezers_monthly_cost
        unit_of_measurement: "ZAR"
        device_class: monetary
        state: >
          {{ (states('sensor.freezer_centre_monthly_cost') | float(0) + 
              states('sensor.freezer_left_monthly_cost') | float(0)) | round(2) }}
        icon: mdi:currency-zar
      
      - name: "Both Freezers Yearly Cost"
        unique_id: both_freezers_yearly_cost
        unit_of_measurement: "ZAR"
        device_class: monetary
        state: >
          {{ (states('sensor.freezer_centre_yearly_cost') | float(0) + 
              states('sensor.freezer_left_yearly_cost') | float(0)) | round(2) }}
        icon: mdi:currency-zar
      
      # ANOMALY DETECTION - CENTRE
      - name: "Freezer Centre Anomaly Percentage"
        unique_id: freezer_centre_anomaly_percentage
        unit_of_measurement: "%"
        state: >
          {% set current = states('sensor.freezer_garage_centre_power') | float(0) %}
          {% set avg = state_attr('sensor.freezer_garage_centre_power', 'mean') | default(current) | float(0) %}
          {% if avg > 0 %}
            {{ (((current - avg) / avg) * 100) | round(1) }}
          {% else %}
            0
          {% endif %}
        icon: mdi:percent
      
      # ANOMALY DETECTION - LEFT
      - name: "Freezer Left Anomaly Percentage"
        unique_id: freezer_left_anomaly_percentage
        unit_of_measurement: "%"
        state: >
          {% set current = states('sensor.freezer_garage_left_power') | float(0) %}
          {% set avg = state_attr('sensor.freezer_garage_left_power', 'mean') | default(current) | float(0) %}
          {% if avg > 0 %}
            {{ (((current - avg) / avg) * 100) | round(1) }}
          {% else %}
            0
          {% endif %}
        icon: mdi:percent
  
  - binary_sensor:
      # FREEZER CENTRE ALERTS
      - name: "Freezer Centre High Power Alert"
        unique_id: freezer_centre_high_power_alert
        state: >
          {% set power = states('sensor.freezer_garage_centre_power') | float(0) %}
          {% set threshold = states('input_number.freezer_centre_high_threshold') | float(250) %}
          {{ power > threshold }}
        device_class: problem
        icon: >
          {% if is_state('binary_sensor.freezer_centre_high_power_alert', 'on') %}
            mdi:alert
          {% else %}
            mdi:check-circle
          {% endif %}
      
      - name: "Freezer Centre Anomaly Detected"
        unique_id: freezer_centre_anomaly_detected
        state: >
          {{ states('sensor.freezer_centre_anomaly_percentage') | float(0) | abs > 50 }}
        device_class: problem
        icon: >
          {% if is_state('binary_sensor.freezer_centre_anomaly_detected', 'on') %}
            mdi:chart-bell-curve-cumulative
          {% else %}
            mdi:chart-bell-curve
          {% endif %}
      
      # FREEZER LEFT ALERTS
      - name: "Freezer Left High Power Alert"
        unique_id: freezer_left_high_power_alert
        state: >
          {% set power = states('sensor.freezer_garage_left_power') | float(0) %}
          {% set threshold = states('input_number.freezer_left_high_threshold') | float(250) %}
          {{ power > threshold }}
        device_class: problem
        icon: >
          {% if is_state('binary_sensor.freezer_left_high_power_alert', 'on') %}
            mdi:alert
          {% else %}
            mdi:check-circle
          {% endif %}
      
      - name: "Freezer Left Anomaly Detected"
        unique_id: freezer_left_anomaly_detected
        state: >
          {{ states('sensor.freezer_left_anomaly_percentage') | float(0) | abs > 50 }}
        device_class: problem
        icon: >
          {% if is_state('binary_sensor.freezer_left_anomaly_detected', 'on') %}
            mdi:chart-bell-curve-cumulative
          {% else %}
            mdi:chart-bell-curve
          {% endif %}

#==============================================================================
# AUTOMATIONS - Alerts and notifications
#==============================================================================
automation:
  # High Power Alert - Centre
  - id: freezer_centre_high_power_alert
    alias: "Freezer Centre High Power Alert"
    description: "Alert when centre freezer power consumption is abnormally high"
    trigger:
      - platform: state
        entity_id: binary_sensor.freezer_centre_high_power_alert
        to: "on"
        for:
          minutes: 15
    condition:
      - condition: state
        entity_id: input_boolean.freezer_monitoring_enabled
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.freezer_telegram_alerts
                state: "on"
            sequence:
              - service: telegram_bot.send_message
                data:
                  target: !secret telegram_chat_id
                  title: "⚠️ Freezer Centre Alert"
                  message: |
                    HIGH POWER CONSUMPTION DETECTED
                    
                    • Current Power: {{ states('sensor.freezer_garage_centre_power') }}W
                    • Threshold: {{ states('input_number.freezer_centre_high_threshold') }}W
                    • Status: {{ states('sensor.freezer_centre_status') }}
                    • Duration: 15+ minutes
                    
                    ACTION REQUIRED: Check freezer immediately
                  data:
                    tag: "freezer_centre_alert"
      
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.freezer_email_alerts
                state: "on"
            sequence:
              - service: notify.email_ha
                data:
                  title: "⚠️ Freezer Centre High Power Alert"
                  message: |
                    CENTRE FREEZER HIGH POWER ALERT
                    {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
                    
                    Current Power: {{ states('sensor.freezer_garage_centre_power') }}W
                    Threshold: {{ states('input_number.freezer_centre_high_threshold') }}W
                    Status: {{ states('sensor.freezer_centre_status') }}
                    Alert Duration: 15+ minutes
                    
                    This may indicate a problem with the freezer.
                    Please check the unit immediately.
    mode: single
  
  # High Power Alert - Left
  - id: freezer_left_high_power_alert
    alias: "Freezer Left High Power Alert"
    description: "Alert when left freezer power consumption is abnormally high"
    trigger:
      - platform: state
        entity_id: binary_sensor.freezer_left_high_power_alert
        to: "on"
        for:
          minutes: 15
    condition:
      - condition: state
        entity_id: input_boolean.freezer_monitoring_enabled
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.freezer_telegram_alerts
                state: "on"
            sequence:
              - service: telegram_bot.send_message
                data:
                  target: !secret telegram_chat_id
                  title: "⚠️ Freezer Left Alert"
                  message: |
                    HIGH POWER CONSUMPTION DETECTED
                    
                    • Current Power: {{ states('sensor.freezer_garage_left_power') }}W
                    • Threshold: {{ states('input_number.freezer_left_high_threshold') }}W
                    • Status: {{ states('sensor.freezer_left_status') }}
                    • Duration: 15+ minutes
                    
                    ACTION REQUIRED: Check freezer immediately
                  data:
                    tag: "freezer_left_alert"
      
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.freezer_email_alerts
                state: "on"
            sequence:
              - service: notify.email_ha
                data:
                  title: "⚠️ Freezer Left High Power Alert"
                  message: |
                    LEFT FREEZER HIGH POWER ALERT
                    {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
                    
                    Current Power: {{ states('sensor.freezer_garage_left_power') }}W
                    Threshold: {{ states('input_number.freezer_left_high_threshold') }}W
                    Status: {{ states('sensor.freezer_left_status') }}
                    Alert Duration: 15+ minutes
                    
                    This may indicate a problem with the freezer.
                    Please check the unit immediately.
    mode: single
  
  # Daily Report (09:00)
  - id: freezers_daily_report
    alias: "Freezers Daily Report"
    description: "Daily report at 09:00 with costs and status"
    trigger:
      - platform: time
        at: "09:00:00"
    condition:
      - condition: state
        entity_id: input_boolean.freezer_monitoring_enabled
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.freezer_telegram_alerts
                state: "on"
            sequence:
              - service: telegram_bot.send_message
                data:
                  target: !secret telegram_chat_id
                  title: "❄️ Daily Freezer Report"
                  message: |
                    FREEZER PERFORMANCE - {{ now().strftime('%Y-%m-%d') }}
                    
                    💰 YESTERDAY'S COSTS:
                    • Centre: R{{ states('sensor.freezer_centre_daily_cost') }}
                    • Left: R{{ states('sensor.freezer_left_daily_cost') }}
                    • Combined: R{{ states('sensor.both_freezers_daily_cost') }}
                    
                    📊 STATUS:
                    • Centre: {{ states('sensor.freezer_centre_status') }}
                    • Left: {{ states('sensor.freezer_left_status') }}
                    
                    💡 MONTH TO DATE:
                    • Total Cost: R{{ states('sensor.both_freezers_monthly_cost') }}
                  data:
                    tag: "freezers_daily"
      
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.freezer_email_alerts
                state: "on"
            sequence:
              - service: notify.email_ha
                data:
                  title: "❄️ Daily Freezer Performance Report"
                  message: |
                    DUAL FREEZER DAILY REPORT
                    {{ now().strftime('%Y-%m-%d') }}
                    
                    YESTERDAY'S COSTS:
                    • Centre Freezer: R{{ states('sensor.freezer_centre_daily_cost') }}
                    • Left Freezer: R{{ states('sensor.freezer_left_daily_cost') }}
                    • Combined Total: R{{ states('sensor.both_freezers_daily_cost') }}
                    
                    ENERGY CONSUMPTION:
                    • Centre: {{ states('sensor.daily_freezer_garage_centre_power') }} kWh
                    • Left: {{ states('sensor.daily_freezer_garage_left_power') }} kWh
                    
                    OPERATIONAL STATUS:
                    • Centre Freezer: {{ states('sensor.freezer_centre_status') }}
                    • Left Freezer: {{ states('sensor.freezer_left_status') }}
                    
                    MONTH TO DATE:
                    • Combined Monthly Cost: R{{ states('sensor.both_freezers_monthly_cost') }}
                    • Centre Monthly: R{{ states('sensor.freezer_centre_monthly_cost') }}
                    • Left Monthly: R{{ states('sensor.freezer_left_monthly_cost') }}
                    
                    Both freezers are operating {{ 'normally' if is_state('sensor.freezer_centre_status', 'Normal') and is_state('sensor.freezer_left_status', 'Normal') else 'with issues - check immediately' }}.
    mode: single
  
  # Weekly Summary (Sunday 09:00)
  - id: freezers_weekly_summary
    alias: "Freezers Weekly Summary"
    description: "Comprehensive weekly report on Sundays"
    trigger:
      - platform: time
        at: "09:00:00"
    condition:
      - condition: time
        weekday:
          - sun
      - condition: state
        entity_id: input_boolean.freezer_monitoring_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.freezer_email_alerts
        state: "on"
    action:
      - service: notify.email_ha
        data:
          title: "❄️ Weekly Freezer Performance Summary"
          message: |
            DUAL FREEZER WEEKLY SUMMARY
            {{ now().strftime('%Y-%m-%d') }}
            
            WEEKLY COSTS:
            • Centre Freezer: R{{ states('sensor.freezer_centre_monthly_cost') }}
            • Left Freezer: R{{ states('sensor.freezer_left_monthly_cost') }}
            • Combined Week: R{{ (states('sensor.weekly_freezer_garage_centre_power')|float(0) + states('sensor.weekly_freezer_garage_left_power')|float(0)) * states('input_number.electricity_rate_freezers')|float(2.97) }}
            
            MONTHLY PERFORMANCE:
            • Month to Date: R{{ states('sensor.both_freezers_monthly_cost') }}
            • Centre MTD: R{{ states('sensor.freezer_centre_monthly_cost') }}
            • Left MTD: R{{ states('sensor.freezer_left_monthly_cost') }}
            
            YEARLY TOTALS:
            • Year to Date: R{{ states('sensor.both_freezers_yearly_cost') }}
            • Centre YTD: R{{ states('sensor.freezer_centre_yearly_cost') }}
            • Left YTD: R{{ states('sensor.freezer_left_yearly_cost') }}
            
            ENERGY CONSUMPTION:
            • Centre This Week: {{ states('sensor.weekly_freezer_garage_centre_power') }} kWh
            • Left This Week: {{ states('sensor.weekly_freezer_garage_left_power') }} kWh
            
            OPERATIONAL STATUS:
            • Centre Freezer: {{ states('sensor.freezer_centre_status') }}
            • Left Freezer: {{ states('sensor.freezer_left_status') }}
            
            HEALTH INDICATORS:
            • Centre Anomalies: {{ 'Detected' if is_state('binary_sensor.freezer_centre_anomaly_detected', 'on') else 'None' }}
            • Left Anomalies: {{ 'Detected' if is_state('binary_sensor.freezer_left_anomaly_detected', 'on') else 'None' }}
            
            Your freezers are {{ 'operating normally' if is_state('sensor.freezer_centre_status', 'Normal') and is_state('sensor.freezer_left_status', 'Normal') else 'experiencing issues - inspection recommended' }}.
    mode: single