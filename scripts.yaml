# OneDrive Management Scripts (Updated)
# Add these to your scripts.yaml file

# Diagnostic script to check all OneDrive entities
onedrive_diagnostic_check:
  alias: "OneDrive Diagnostic Check"
  description: "Check status of all OneDrive entities for troubleshooting"
  sequence:
    - service: notify.mobile_app_your_phone  # Replace with your actual device name
      data:
        title: "🔍 OneDrive Diagnostic Report"
        message: >
          CORE ENTITIES STATUS:
          • Used Storage: {{ states('sensor.onedrive_used_storage') }}
          • Total Storage: {{ states('sensor.onedrive_total_available_storage') }}
          • Remaining: {{ states('sensor.onedrive_remaining_storage') }}
          • Percentage: {{ states('sensor.onedrive_storage_percentage') }}%
          • Drive State: {{ states('sensor.onedrive_drive_state') }}
          • Health: {{ states('binary_sensor.onedrive_health') }}
          • Storage Warning: {{ states('binary_sensor.onedrive_storage_warning') }}
          • Days Until Full: {{ states('sensor.onedrive_days_until_full') }}
        data:
          tag: "onedrive_diagnostic"

# Create Home Assistant Backup to OneDrive (Updated)
create_onedrive_backup:
  alias: "Create OneDrive Backup"
  description: "Create a full Home Assistant backup and sync to OneDrive"
  sequence:
    - service: notify.mobile_app_your_phone  # Replace with your actual device name
      data:
        title: "🔄 Backup Starting"
        message: "Creating Home Assistant backup..."
    - service: backup.create
      data:
        name: "HA_Backup_{{ now().strftime('%Y%m%d_%H%M%S') }}"
        compressed: true
    - delay:
        minutes: 5  # Wait for backup to complete
    - service: notify.mobile_app_your_phone  # Replace with your actual device name
      data:
        title: "✅ Backup Complete"
        message: >
          Home Assistant backup created successfully!
          Current OneDrive usage: {{ states('sensor.onedrive_storage_percentage') }}%
        data:
          tag: "backup_complete"

# Force OneDrive Sync (Updated)
force_onedrive_sync:
  alias: "Force OneDrive Sync"
  description: "Manually trigger OneDrive synchronization"
  sequence:
    - service: notify.mobile_app_your_phone  # Replace with your actual device name
      data:
        title: "🔄 Force Sync Started"
        message: >
          Forcing OneDrive sync...
          Current state: {{ states('sensor.onedrive_drive_state') }}
    # Note: The actual sync command depends on your OneDrive integration
    # You may need to call a specific service here
    - delay:
        minutes: 2
    - service: notify.mobile_app_your_phone  # Replace with your actual device name
      data:
        title: "✅ Sync Process Complete"
        message: >
          OneDrive sync process completed.
          Drive state: {{ states('sensor.onedrive_drive_state') }}
          Health: {{ states('binary_sensor.onedrive_health') }}

# OneDrive Health Check (Updated with actual entities)
onedrive_health_check:
  alias: "OneDrive Health Check"
  description: "Perform comprehensive OneDrive health check"
  sequence:
    - service: notify.mobile_app_your_phone  # Replace with your actual device name
      data:
        title: "🔍 Health Check Running"
        message: "Performing OneDrive health check..."
    - delay:
        seconds: 10
    - service: notify.mobile_app_your_phone  # Replace with your actual device name
      data:
        title: "📊 OneDrive Health Report"
        message: >
          HEALTH CHECK RESULTS:
          
          🔗 Connection: {{ 'Good' if is_state('binary_sensor.onedrive_health', 'on') else 'Issues Detected' }}
          📊 Drive State: {{ states('sensor.onedrive_drive_state') | title }}
          💾 Storage: {{ states('sensor.onedrive_storage_percentage') }}% used
          ⚠️ Storage Warning: {{ 'Active' if is_state('binary_sensor.onedrive_storage_warning', 'on') else 'None' }}
          📈 Used Space: {{ states('sensor.onedrive_used_storage') }}GB
          📉 Remaining: {{ states('sensor.onedrive_remaining_storage') }}GB
          🗓️ Days Until Full: {{ states('sensor.onedrive_days_until_full') }}
        data:
          actions:
            - action: "VIEW_DASHBOARD"
              title: "View Dashboard"
            - action: "FORCE_SYNC"
              title: "Force Sync"

# Add these scripts to your scripts.yaml file

# Immediate Telegram Test
test_telegram_now:
  alias: "Test Telegram Right Now"
  sequence:
    - service: notify.telegram
      data:
        title: "🔧 Telegram Test"
        message: |
          Telegram test at {{ now().strftime('%H:%M:%S') }}
          
          If you receive this message, your Telegram bot is working! ✅
          
          System: Home Assistant (192.168.1.30:8123)
          Status: All systems operational

# Telegram System Status
telegram_system_status:
  alias: "Telegram System Status"
  sequence:
    - service: notify.telegram
      data:
        title: "📊 System Status"
        message: |
          🏠 Home Assistant Status Report
          Time: {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
          
          🖥️ SERVER STATUS:
          • Status: {{ states('sensor.johanba_server_status') | title }}
          • Temperature: {{ states('sensor.johanba_server_system_temperature') }}°C
          • CPU Usage: {{ states('sensor.johanba_server_cpu_usage') }}%
          • Memory: {{ states('sensor.johanba_server_memory_usage') }}%
          
          ☁️ ONEDRIVE:
          • Used: {{ states('sensor.onedrive_used_storage') }}GB
          • Free: {{ states('sensor.onedrive_remaining_storage') }}GB
          • Status: {{ states('sensor.onedrive_drive_state') | title }}
          
          🌐 NETWORK:
          • WAN: {{ 'Connected ✅' if is_state('binary_sensor.archer_d2_wan_status', 'on') else 'Disconnected ❌' }}
          • IP: {{ states('sensor.archer_d2_external_ip') }}
          
          All systems monitored! 🎯

# Telegram with photo (if you want to test media)
telegram_test_with_photo:
  alias: "Telegram Test with System Info"
  sequence:
    - service: notify.telegram
      data:
        title: "📱 Advanced Telegram Test"
        message: |
          🏠 Home Assistant Advanced Test
          
          This message tests formatting:
          
          *Bold Text*
          _Italic Text_
          `Code Text`
          
          🔹 Bullet points work
          🔹 Emojis work ✅
          🔹 Multiple lines work
          
          System IP: {{ states('sensor.archer_d2_external_ip') }}
          Time: {{ now().strftime('%H:%M:%S') }}
          
          If you can read this formatted message, everything is perfect! 🎉              