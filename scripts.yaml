#===============================================================================
# MANUAL GOOGLE DRIVE BACKUP SCRIPT - UPDATED WITH CORRECT SENSORS
#===============================================================================
create_google_drive_backup:
  alias: "Create Manual Google Drive Backup"
  description: "Manually create a backup and upload to Google Drive with proper notifications"
  sequence:
    # Step 1: Notify backup is starting
    - service: telegram_bot.send_message
      data:
        title: "☁️ Google Drive Backup Starting"
        message: >
          Manual backup initiated at {{ now().strftime('%H:%M:%S') }}
          Please wait while backup is created and uploaded...
        data:
          tag: "gdrive_backup_start"

    # Step 2: Create the backup using hassio service
    - service: hassio.backup_full
      data:
        name: "Manual_GDrive_Backup_{{ now().strftime('%Y%m%d_%H%M%S') }}"
        compressed: true

    # Step 3: Wait for backup to complete (adjust time based on your system size)
    - delay:
        minutes: 10

    # Step 4: Trigger Google Drive upload (if integration supports it)
    - service: google_drive_backup.upload
      data: {}

    # Step 5: Wait for upload to complete
    - delay:
        minutes: 5

    # Step 6: Send Telegram notification with proper sensor references
    - service: telegram_bot.send_message
      data:
        title: "✅ Google Drive Backup Complete"
        message: >
          Manual backup completed successfully!
          
          Backup: Manual_GDrive_Backup_{{ now().strftime('%Y%m%d_%H%M%S') }}
          
          Status: {{ states('sensor.backup_state') | default('Unknown') }}
          
          Last Backup: {{ state_attr('sensor.backup_state', 'last_backup') | default('Unknown') }}
          
          Size: {{ ((state_attr('sensor.backup_state', 'size_in_google_drive') | float(0) / 1024 / 1024 / 1024) | round(2)) if state_attr('sensor.backup_state', 'size_in_google_drive') else 'Unknown' }} GB
        data:
          tag: "gdrive_backup_complete"

    # Step 7: Send comprehensive email notification with correct sensor references
    - service: notify.email_ha
      data:
        title: "✅ Google Drive Backup Completed"
        message: |
          Manual Google Drive backup has been completed successfully.
          
          BACKUP DETAILS:
          • Backup Name: Manual_GDrive_Backup_{{ now().strftime('%Y%m%d_%H%M%S') }}
          • Creation Time: {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
          • Backup Size: {{ ((state_attr('sensor.backup_state', 'size_in_google_drive') | float(0) / 1024 / 1024 / 1024) | round(2)) if state_attr('sensor.backup_state', 'size_in_google_drive') else 'Calculating...' }} GB
          • Status: {{ states('sensor.backup_state') | default('Processing') }}
          • Next Scheduled: {{ state_attr('sensor.backup_state', 'next_backup') | default('Check settings') }}
          
          SYSTEM STATUS:
          • Home Assistant Version: {{ states('sensor.current_version') | default(states('update.home_assistant_core_update') | default('Unknown')) }}
          • Host Disk Free: {{ (states('sensor.disk_free') | float(0)) if states('sensor.disk_free') != 'unknown' else ((states('sensor.home_assistant_disk_free') | float(0) / 1024) if states('sensor.home_assistant_disk_free') != 'unknown' else 'Unknown') }} GB
          • Memory Usage: {{ states('sensor.johanba_server_memory_usage') | default('Unknown') }}%
          • CPU Temperature: {{ states('sensor.johanba_server_system_temperature') | default('Unknown') }}°C
          
          Backup Location: Google Drive/Home Assistant Backups/Full Config Backups/
          
          This backup includes your complete Home Assistant configuration, add-ons, and data.
  mode: single